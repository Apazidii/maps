from graphics import *
from PIL import Image as NewImage
from dijkstar import Graph, find_path

graph = Graph()
graph.add_edge(67,32,1)
graph.add_edge(32,67,1)
graph.add_edge(32,33,1)
graph.add_edge(33,32,1)
graph.add_edge(33,20,1)
graph.add_edge(20,33,1)
graph.add_edge(33,34,1)
graph.add_edge(34,33,1)
graph.add_edge(34,21,1)
graph.add_edge(21,34,1)
graph.add_edge(34,35,1)
graph.add_edge(35,34,1)
graph.add_edge(35,22,1)
graph.add_edge(22,35,1)
graph.add_edge(35,36,1)
graph.add_edge(36,35,1)
graph.add_edge(36,1, 1)
graph.add_edge(1,36, 1)
graph.add_edge(36,37,1)
graph.add_edge(37,36,1)
graph.add_edge(37,23,1)
graph.add_edge(23,37,1)
graph.add_edge(38,2, 1)
graph.add_edge(2,38, 1)
graph.add_edge(38,39,1)
graph.add_edge(39,38,1)
graph.add_edge(39,24,1)
graph.add_edge(24,39,1)
graph.add_edge(39,40,1)
graph.add_edge(40,39,1)
graph.add_edge(40,3, 1)
graph.add_edge(3,40, 1)
graph.add_edge(40,41,1)
graph.add_edge(41,40,1)
graph.add_edge(41,25,1)
graph.add_edge(25,41,1)
graph.add_edge(41,42,1)
graph.add_edge(42,41,1)
graph.add_edge(42,4, 1)
graph.add_edge(4,42, 1)
graph.add_edge(42,43,1)
graph.add_edge(43,42,1)
graph.add_edge(43,44,1)
graph.add_edge(44,43,1)
graph.add_edge(44,5,1)
graph.add_edge(5,44,1)
graph.add_edge(43,45,1)
graph.add_edge(45,43,1)
graph.add_edge(45,6,1)
graph.add_edge(6,45,1)
graph.add_edge(45,46,1)
graph.add_edge(46,45,1)
graph.add_edge(46,7,1)
graph.add_edge( 7,46,1)
graph.add_edge(46,47,1)
graph.add_edge(47,46,1)
graph.add_edge(47,8, 1)
graph.add_edge( 8,47,1)
graph.add_edge(47,48,1)
graph.add_edge(48,47,1)
graph.add_edge(48, 9,1)
graph.add_edge( 9,48,1)
graph.add_edge(48,49,1)
graph.add_edge(49,48,1)
graph.add_edge(49,50,1)
graph.add_edge(50,49,1)
graph.add_edge(50,51,1)
graph.add_edge(51,50,1)
graph.add_edge(51,11,1)
graph.add_edge(11,51,1)
graph.add_edge(51,10,1)
graph.add_edge(10,51,1)
graph.add_edge(49,52,1)
graph.add_edge(52,49,1)
graph.add_edge(52,12,1)
graph.add_edge(12,52,1)
graph.add_edge(52,53,1)
graph.add_edge(53,52,1)
graph.add_edge(53,26,1)
graph.add_edge(26,53,1)
graph.add_edge(53,54,1)
graph.add_edge(54,53,1)
graph.add_edge(54,13,1)
graph.add_edge(13,54,1)
graph.add_edge(54,55,1)
graph.add_edge(55,54,1)
graph.add_edge(55,27,1)
graph.add_edge(27,55,1)
graph.add_edge(55,56,1)
graph.add_edge(56,55,1)
graph.add_edge(56,28,1)
graph.add_edge(28,56,1)
graph.add_edge(56,57,1)
graph.add_edge(57,56,1)
graph.add_edge(57,14,1)
graph.add_edge(14,57,1)
graph.add_edge(57,58,1)
graph.add_edge(58,57,1)
graph.add_edge(58,29,1)
graph.add_edge(29,58,1)
graph.add_edge(58,59,1)
graph.add_edge(59,58,1)
graph.add_edge(59,30,1)
graph.add_edge(30,59,1)
graph.add_edge(59,60,1)
graph.add_edge(60,59,1)
graph.add_edge(60,15,1)
graph.add_edge(15,60,1)
graph.add_edge(60,61,1)
graph.add_edge(61,60,1)
graph.add_edge(61,31,1)
graph.add_edge(31,61,1)
graph.add_edge(61,62,1)
graph.add_edge(62,61,1)
graph.add_edge(62,63,1)
graph.add_edge(63,62,1)
graph.add_edge(63,64,1)
graph.add_edge(64,63,1)
graph.add_edge(64,17,1)
graph.add_edge(17,64,1)
graph.add_edge(64,16,1)
graph.add_edge(16,64,1)
graph.add_edge(64,65,1)
graph.add_edge(65,64,1)
graph.add_edge(65,18,1)
graph.add_edge(18,65,1)
graph.add_edge(65,66,1)
graph.add_edge(66,65,1)
graph.add_edge(66,19,1)
graph.add_edge(19,66,1)
graph.add_edge(66,32,1)
graph.add_edge(32,66,1)

a = int(input())
b = int(input())

path = find_path(graph,a,b).nodes

win = GraphWin("Окно для графики", 1010,1110)
image = "src/map2.png"
myImage = Image(Point(1010/2-4,1110/2-4),image)
myImage.draw(win)




k = "1=20,46-2=20,56-3=20,66-4=20,76-5=20,86-6=36,90-7=46,90-8=56,90-9=66,90-10=76,90-11=80,87-12=80,80-13=80,66-14=80,52-15=80,33-16=80,14-17=76,10-18=56,10-19=36,10-20=30,24-21=30,34-22=30,44-23=30,54-24=30,64-25=30,74-26=70,74-27=70,64-28=70,54-29=70,44-30=70,34-31=70,24-32=25,15-33=25,24-34=25,34-35=25,44-36=25,46-37=25,54-38=25,56-39=25,64-40=25,66-41=25,74-42=25,76-43=25,85-44=25,86-45=36,85-46=46,85-47=56,85-48=66,85-49=75,85-50=75,87-51=76,87-52=75,80-53=75,74-54=75,66-55=75,64-56=75,54-57=75,52-58=75,44-59=75,34-60=75,33-61=75,24-62=75,15-63=76,15-64=76,14-65=56,15-66=36,15-67=20,15"
k = k.split("-")
l = len(k)
for i in range(0,l):
    k[i] = k[i].split("=")
    k[i][0] = int(k[i][0])
    k[i][1] = eval("["+k[i][1]+"]")

l = len(path)
for i in range(0,l-1):
    s = path[i]
    f = path[i+1]

    line = Line(Point(k[s-1][1][0]*10,k[s-1][1][1]*10),Point(k[f-1][1][0]*10,k[f-1][1][1]*10))
    line.setWidth(15)
    line.draw(win)






# saves the current TKinter object in


win.getMouse()
win.close()



